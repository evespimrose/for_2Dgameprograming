1. 자기소개
   -1.1 학번과 이름 : 2017180036 장형택 입니다.
   -1.2 컴퓨터는 잘 다루는지 (0~10) : 6.
   -1.3 프로그래밍 경험은 어떤 것이 있는지? : C, C++을 학부 과정을 통해 이수하였으며, 자신의 실력에 부족함을 느끼고 지인이 추천해 준 solved.ac 사이트에서 문제를 풀어보고 있습니다.
   -1.4 이 수업에서 바라는 점이 무엇인지? : 태어나서 처음 파이썬을 접해보는데, 교수님의 가르침을 잘 흡수하여 파이썬을 이용한 코드를 보았을 때 막힘없이 설계하고 해석하고 수정하는 정도의 실력을 기르고 싶습니다.
2. OOP에 대한 슬라이드를 읽고, 내용 및 느낀점을 정리.
  동물 중, 사람만이 가진 고유한 특징은 무엇이라 할수 있습니까?
  그것은 상징 체계를 만들고, 공유, 발전시켜 다음 세대에 물려주는 것입니다.
  그러한 특징을 가능하게 하는 것이 추상화하는 능력입니다.
  추상 - 대상에서 특징만을 뽑아낸 것
  객체 지향이란 : 객체를 소스로 무언가를 하는 것
  키워드 5 : 클래스, 오브젝트. 캡슐화, 상속성, 다형성
    클래스 = 추상 : 표현 대상들의 공통적인 특징에 대한 서술을 말합니다.
    오브젝트 = 실체 : 클래스를 구체적으로 표현한 것. 데이터와 데이터에 대한 조작의 묶음입니다.
  객체지향 프로그래밍 언어의 특성 : 캡슐화, 상속성, 다형성
    캡슐화 : '데이터'와 '데이터에 대한 조작'을 묶는 것. = 추상화
    상속성 : 하나의 클래스를 가지고 있는 특징들을 그대로 다른 클래스가 물려 받는 것.
      -> 기존 클래스와 구분되는 특징만 추가하여 리스트에 추가 할수 있음.
    다형성 : 상속성의 계층을 따라서 각각의 클래스에게 한가지 이름을 줄 수 있는 것.
      -> 같은 명령을 각기 다른 오브젝트에 줄 수 있습니다.
  Smalltalk - 현대 대부분의 객체지향언어의 조상,SW시스템(프로그래밍 언어, 개발환경, 라이브러리로 구성)
  최초의 객체지향 언어 "Simula67"은 시뮬레이션을 위해 만들어진 언어
  객체지향의 장점
    1) 자연스러운 모델링
    2) 생산성 향상
    3) 점진적 개발
    4) 견고한 의미적 모델링
    5) 명확한 인터페이스 기술
    6) 보안
    7) 유지보수의 용이성
  객체지향 분석/설계 방법론 요약
  식별하고, 일반화하고, 대상들간의 관계를 설정하고, 상호작용 하도록 한다.
  객체지향을 한마디로 정의한다면, "사람이 세계를 보고 이해하는 방법을 흉내 낸 방법론"이라 할 수 있다.
3.

  -3.1 커맨드 라인에 대한 사이트의 설명을 따라하고, 요약.
    커맨드 라인이란 그래픽 인터페이스는 지원 하지 않지만 윈도우 익스플로러나 맥OS의 파인더와 그 기능이 
비슷한 커맨드-라인 인터페이스, cmd, CLI, 프롬프트, 콘솔, 터미널이라고도 불리는 텍스트 기반 응용 프로그램입니다.
이 사이트에서는 윈도우의 명령 프롬프트 또는 맥 OS의 터미널을 이용한 간단한 디렉터리 접속과 새 디렉터리 생성 및 삭제를 해보며, 유용한 명령어들을 모아 소개 해줍니다.
  -3.2 본인이 가진 Command Line 방식의 숙련도에 대한 평가(0~10) : 8.
    이전 2017학년도 2학기 오황석 교수님의 전공선택 과목인 Open SW 입문에서 리눅스 기반 커맨드 라인 방식을 이수한 바 있고, 해당 과목에서 학점을 A0로 마무리하여 커맨드 라인 방식의 숙련도에 대해 높은 점수를 할당했습니다.